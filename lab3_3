#include <iostream>
using namespace std;

void zapysk(int kol, int kol1, int a[], int b[], int sum[], int pr[])
{
	if (kol>kol1)
	  for (int i = 0; i < kol; i++)
		sum[i] = a[i] + b[i];
	else
	for (int i = 0; i < kol1; i++)
		sum[i] = a[i] + b[i];

	
	for (int i = 0; i < kol; i++)
	for (int j = 0; j < kol1; j++)
		pr[i+j] = pr[i+j] + a[i] * b[j];
}
void assert(int sum[], int pr[], int sum_[],int w ,int pr_[],int q)
{
		
	int k = 0;
    for (int j = 0; j < w; j++)
	{
        if(sum[j]==sum_[j])
			k++;
	}
    for (int i = 0; i < q; i++)
	{
        if(pr[i]==pr_[i])
			k++;
	}
    if (k==w+q)
        cout << "ok"<< endl;
    else
        cout << "fail"<<endl;
}
int main()
{
	
	int sum[10000] = { 0 };
	int pr[10000] = { 0 };
	int a[3] = { 2, 0, -1 };
	int b[3] = { 0, 7, -3 };
	zapysk(3, 3, a, b, sum, pr);
	int sum1[5]= { 0, 0, 2, 7, -4};
	int pr1[5] = { 0, 14, -6, -7, 3};
	assert(sum,pr,sum1,5,pr1,5);

	int a2[2] = { 1, -1 };
	int b2[2] = { 1, 1 };
	zapysk(2, 2, a2, b2, sum, pr);
	int sum2[5]= { 0,0,0,2,0};
	int pr2[5] = { 0,0,1,0,-1};
	assert(sum,pr,sum2,5,pr2,5);
	system("pause");

	return 0;
}
