#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

struct item 
{
	char key;
	item* prev;
};

bool structure(char *str) 
{
	item* top = new item;
	top->key = 0, top->prev = NULL;
	for (int i = 0; i < strlen(str); ++i)
		if (str[i] == '(' || str[i] == '[' || str[i] == '{') {
			item* cur = new item;
			cur->key = str[i];
			cur->prev = top;
			top = cur;
		}
		else 
		{
			if (str[i] == ')' && top->key != '(' || str[i] == ']' && top->key != '[' || str[i] == '}' && top->key != '{')
				return false;
			top = top->prev;
		}
		return top->key == 0;
}

void assert(char str[], bool ans)
{
	bool res = structure(str);
	if (res == ans)
		cout << "Ok" << endl;
	else
		cout << "Fail" << endl;
}

int main()
{
	char str1[] = "(())({[]})";
	assert(str1, true);
	char str2[] = "([])";
	assert(str2, true);
	char str3[] = "(()";
	assert(str3, false);
	char str4[100] = "(())[][}";
	assert(str4, false);
	char str5[] = "()([])";
	assert(str5, true);
	system("pause");
	return 0;
}
